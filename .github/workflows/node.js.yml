name: Node.js CI with OWASP Dependency Check, PM2, Docker, and Trivy

on:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.12.0]

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Ensure unzip is installed (required for Bun installation)
      - name: Install unzip
        run: |
          if ! command -v unzip &> /dev/null; then
            echo "Installing unzip..."
            sudo apt-get update && sudo apt-get install -y unzip
          fi

      # Ensure Bun is Installed
      - name: Ensure Bun is Installed
        run: |
          if ! command -v bun &> /dev/null; then
            echo "Installing Bun..."
            curl -fsSL https://bun.sh/install | bash
            echo "$HOME/.bun/bin" >> $GITHUB_PATH
            echo "export PATH=$HOME/.bun/bin:\$PATH" >> $HOME/.bashrc
          fi
          export PATH=$HOME/.bun/bin:$PATH
          bun --version

      # Ensure PM2 is Installed
      - name: Ensure PM2 is Installed
        run: |
          if ! command -v pm2 &> /dev/null; then
            echo "Installing PM2..."
            npm install -g pm2
            echo "$(npm bin -g)" >> $GITHUB_PATH
          fi
          pm2 --version

      # Install Dependencies with Bun
      - name: Install Dependencies
        run: |
          export PATH=$HOME/.bun/bin:$PATH
          bun install

      # Generate Package Lock File
      - name: Generate Package Lock File
        run: npm install --package-lock-only

      # Run OWASP Dependency Check
      - name: Run OWASP Dependency Check
        run: |
          dependency-check/dependency-check/bin/dependency-check.sh \
            --scan . \
            --format "ALL" \
            --out ./owasp-report \
            --failOnCVSS 5 \
            --disableAssembly \
            --suppression suppressions.xml || true

      # Upload OWASP Reports
      - name: Upload OWASP Reports
        uses: actions/upload-artifact@v4
        with:
          name: OWASP Dependency Check Report
          path: ./owasp-report

      # Build the Source Code
      - name: Build the Source Code
        run: |
          export PATH=$HOME/.bun/bin:$PATH
          bun build index.ts --if-present

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/kwickbill-api-prod:latest

      # Deploy the Docker container
      - name: Deploy Docker Container
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/kwickbill-api-prod:latest
          docker stop kwickbill-api-prod || true
          docker rm kwickbill-api-prod || true
          docker run -d --name kwickbill-api-prod -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/kwickbill-api-prod:latest

      # Restart Application with PM2
      - name: Restart Application with PM2
        run: |
          export PATH=$HOME/.bun/bin:$PATH
          echo "Restarting application with PM2..."
          pm2 start index.ts --name kwickbill-prod --interpreter bun --env PORT=3000 --update-env || pm2 restart kwickbill-prod --update-env
          pm2 save
          pm2 list

      # Run Trivy File System Scan
      - name: Run Trivy File System Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          export PATH=$PATH:$(pwd)/bin
          trivy fs --exit-code 0 --severity MEDIUM,HIGH,CRITICAL .
          trivy fs --exit-code 1 --severity CRITICAL .
        shell: bash
