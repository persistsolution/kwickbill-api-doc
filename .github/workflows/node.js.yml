name: Node.js CI with OWASP Dependency Check, PM2, Docker, and Trivy

on:
  push:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.12.0]

    steps:
    # Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Set up Node.js and Install Dependencies
    - name: Set up Node.js, Bun, and PM2
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Tools
      run: |
        # Ensure unzip is installed
        if ! command -v unzip &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y unzip
        fi

        # Install Bun
        if ! command -v bun &> /dev/null; then
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH
        fi
        export PATH=$HOME/.bun/bin:$PATH

        # Install PM2
        if ! command -v pm2 &> /dev/null; then
          npm install -g pm2
          echo "$(npm bin -g)" >> $GITHUB_PATH
        fi
        pm2 --version

    # Install project dependencies
    - name: Install Dependencies
      run: |
        export PATH=$HOME/.bun/bin:$PATH
        bun install

    # Run OWASP Dependency Check
    - name: Run OWASP Dependency Check
      run: |
        dependency-check/dependency-check/bin/dependency-check.sh \
          --scan . \
          --format "ALL" \
          --out ./owasp-report \
          --failOnCVSS 5 \
          --disableAssembly \
          --suppression suppressions.xml || true
    - name: Upload OWASP Reports
      uses: actions/upload-artifact@v4
      with:
        name: OWASP Dependency Check Report
        path: ./owasp-report

    # Build the source code
    - name: Build the Source Code
      run: |
        export PATH=$HOME/.bun/bin:$PATH
        bun build index.ts --if-present

    # Build and push Docker image
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/kwickbill-api-prod:latest

    # Restart application with PM2
    - name: Restart Application with PM2
      run: |
        export PATH=$HOME/.bun/bin:$PATH
        pm2 start index.ts --name kwickbill-prod --interpreter bun --env PORT=3000 --update-env || pm2 restart kwickbill-prod --update-env
        pm2 save
        pm2 list

    # Run Trivy scan
    - name: Run Trivy File System Scan
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        export PATH=$PATH:$(pwd)/bin
        trivy fs --exit-code 0 --severity MEDIUM,HIGH,CRITICAL .
        trivy fs --exit-code 1 --severity CRITICAL .
